1 namespace UndirectedGraph{
2 int n,m,i,x,y,d[N],g[N],v[M<<1],w[M<<1],vis[M<<1],nxt[M<<1],ed;
3 int ans[M],cnt;
4 void add(int x,int y,int z){
5 d[x]++;
6 v[++ed]=y;w[ed]=z;nxt[ed]=g[x];g[x]=ed;
7 }
8 void dfs(int x){
9 for(int&i=g[x];i;){
10 if(vis[i]){i=nxt[i];continue;}
11 vis[i]=vis[i^1]=1;
12 int j=w[i];
13 dfs(v[i]);
14 ans[++cnt]=j;
15 }
16 }
17 void solve(){
18 scanf(”%d%d”,&n,&m);
19 for(i=ed=1;i<=m;i++)scanf(”%d%d”,&x,&y),add(x,y,i),add(y,x,−i);
20 for(i=1;i<=n;i++)if(d[i]&1){puts(”NO”);return;}
21 for(i=1;i<=n;i++)if(g[i]){dfs(i);break;}
22 for(i=1;i<=n;i++)if(g[i]){puts(”NO”);return;}
23 puts(”YES”);
24 for(i=m;i;i−−)printf(”%d ”,ans[i]);
25 }
26 }
